name: Deploy

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  CPPCheck:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install CPPCheck
      run: sudo apt-get install cppcheck

    - name: Run CPPCheck
      run: |
        make cppcheck

  GoogleTest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Checkout
      run: sudo apt-get install docker

    - name: Install GoogleTest
      run: |
        time docker run \
        --volume="${GTEST_ROOT}:/src:ro" \
        --workdir="/src" \
        --rm \
        --env="CC=/usr/local/bin/gcc" \
        --env="BAZEL_CXXOPTS=-std=c++14" \
        ${LINUX_GCC_FLOOR_CONTAINER} \
          /usr/local/bin/bazel test ... \
            --copt="-Wall" \
            --copt="-Werror" \
            --copt="-Wuninitialized" \
            --copt="-Wundef" \
            --copt="-Wno-error=pragmas" \
            --distdir="/bazel-distdir" \
            --features=external_include_paths \
            --keep_going \
            --show_timestamps \
            --test_output=errors

  Linter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Linter
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file

      - name: Fail
        if: steps.linter.outputs.checks-failed > 0
        run: |
          echo "Some files failed the linting checks!"
          exit 1

  Build:
    runs-on: ubuntu-latest
    needs:
      - Linter
      - CPPCheck
      - GoogleTest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build
      run: |
        Echo build

  #CreatePR:
  #  runs-on: ubuntu-latest
  #  needs: Build

  #  steps:
  #  - name: Checkout
  #    uses: actions/checkout@v3

  #  - name: Create PR
  #    uses: peter-evans/create-pull-request@v3
  #    with:
  #      token: ${{ secrets.GITHUB_TOKEN }}
  #      commit-message: 'Auto-generated PR'
  #      title: 'Auto-generated PR'
  #      body: 'This PR was automatically generated.'
  #      branch: develop
